timeoutSecond: ${TIMEOUT_SECOND:180}
server:
  port: 8080
  servlet:
    context-path: /gateway
spring:
  application:
    name: gateway
  profiles:
    active: @profile@
  redis:
    host: ${REDIS_HOST:localhost}
  main:
    allow-bean-definition-overriding: true
  cloud:
    circuitbreaker:
      hystrix:
        enabled: false
    loadbalancer:
      ribbon:
        enabled: false
      retry:
        enable: true
    gateway:
      routes:
        - id: huagui-user-anonymous
          order: 0
          predicates:
            - Path=/user/*/anon/**, /user/swagger-ui.html**, /user/doc.html**, /user/webjars/**, /user/v2/api-docs, /user/swagger-resources/**
          uri: lb://user-service
          filters:
            - OrderedAddRequestHeader=anonymous, TRUE
        - id: huagui-user
          order: 1
          predicates:
            - Path=/user/**
          uri: lb://user-service
          filters:
            - name: CircuitBreaker
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@userKeyResolver}"
                redis-rate-limiter.replenishRate: 30
                redis-rate-limiter.burstCapacity: 60
        # ==============websocket 路由=============
        - id: user-websocket
          uri: lb:${WEBSOCKET_TYPE:ws}://user-service
          order: 19
          predicates:
            - Path=/ws/user/websocket/**
          filters:
            - StripPrefix=1
            - name: CircuitBreaker
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@userKeyResolver}"
                redis-rate-limiter.replenishRate: 30
                redis-rate-limiter.burstCapacity: 60
        - id: huagui-bim-cache
          order: 21
          uri: lb://bimmodel
          predicates:
            - Path=/api/**
          filters:
            - OrderedAddRequestHeader=anonymous, TRUE
        - id: huagui-bim-data
          order: 24
          uri: ${BIMDATA_SERVER:lb://bimdata}
          predicates:
            - Path=/bimdata/**
          filters:
            - OrderedAddRequestHeader=anonymous, TRUE
eureka: #eureka配置
  client:
    fetch-registry: true
    filter-only-up-instances: true
    register-with-eureka: ${REGISTER_EUREKA:true}
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus
    metrics:
      export:
        prometheus:
          enabled: true
    prometheus:
      enabled: true
  endpoint:
    restart:
      enabled: true

