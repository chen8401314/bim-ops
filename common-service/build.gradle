plugins {
    id 'java-library'
}

dependencies {

    def profile = System.getProperty("profile") ?: "dev"

    api project(':base-common')
    api "org.mapstruct:mapstruct:${mapStructVersion}"
    api "org.springframework.boot:spring-boot-starter"
    api "org.springframework.boot:spring-boot-starter-web"
    api "org.springframework.boot:spring-boot-starter-actuator"
    api "org.springframework.boot:spring-boot-starter-jooq"
    api "org.springframework.boot:spring-boot-starter-validation"




    api "com.github.xiaoymin:knife4j-openapi3-jakarta-spring-boot-starter:${knife4jVersion}"
    api "com.alibaba:easyexcel:${easyexcelVersion}"
    api "com.mysql:mysql-connector-j"
    api "cn.hutool:hutool-core:${hutoolVersion}"
    api "com.baomidou:dynamic-datasource-spring-boot3-starter:${baomidouVersion}"

    if ("dev" == profile || "test" == profile) {
        api("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client") {
            exclude group: "com.netflix.hystrix"
            exclude group: "com.netflix.ribbon"
            exclude group: "org.springframework.cloud", module: "spring-cloud-starter-netflix-archaius"
            exclude group: "org.springframework.cloud", module: "spring-cloud-starter-netflix-ribbon"
            exclude group: "org.springframework.cloud", module: "spring-cloud-netflix-ribbon"
            exclude group: "org.springframework.cloud", module: "spring-cloud-netflix-hystrix"
            exclude group: "commons-logging"
            exclude group: "org.apache.httpcomponents", module: "httpclient"
        }
    } else {
        api("org.springframework.cloud:spring-cloud-starter-kubernetes-client-all") {
            exclude group: "org.springframework.cloud", module: "spring-cloud-kubernetes-ribbon"
        }
    }
    api "org.springframework.cloud:spring-cloud-starter-openfeign"
    api "org.springframework.cloud:spring-cloud-loadbalancer"
}
jar.enabled = true
bootJar.enabled = false
